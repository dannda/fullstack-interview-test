{"version":3,"sources":["./src/app/branch/branch.component.html","./src/app/branch/branch.component.ts","./src/app/commit/commit.component.html","./src/app/commit/commit.component.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/services/git-api.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"card\" *ngFor=\"let commit of commits\">\n    <div class=\"card-body\">\n        <a href=\"#\" [routerLink]=\"['/commit',commit.hexsha]\"><h6 class=\"card-title\">{{commit.hexsha}}</h6></a>\n        <p class=\"card-subtitle mb-2\">{{commit.author}}</p>\n        <p class=\"card-subtitle text-muted\">{{commit.authored_datetime}}</p>\n        <p class=\"card-text\">{{commit.message}}</p>\n    </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { GitApiService } from '../services/git-api.service';\n\n@Component({\n  selector: 'app-branch',\n  templateUrl: './branch.component.html',\n  styleUrls: ['./branch.component.css']\n})\nexport class BranchComponent implements OnInit, OnDestroy {\n\n    branch_name;\n    commits;\n    params_subscription;\n\n  constructor(private apiService: GitApiService, private route: ActivatedRoute,\n                private router: Router) { }\n\n  ngOnInit(): void {\n\n      this.params_subscription = this.route.params.subscribe((params) => {\n          this.branch_name = this.route.snapshot.params['branch']\n\n          this.apiService.getBranch( this.branch_name, (err, res) => {\n              if(err){\n                  console.log(err)\n              }\n              else{\n                  this.commits = res.commits;\n              }\n          })\n      });\n\n  }\n\n  ngOnDestroy(): void {\n      this.params_subscription.unsubscribe();\n  }\n\n}\n","<div class=\"container m-3\">\n    <div *ngIf=\"!loading\">\n        <h6>{{commit_hexsha}}</h6>\n        <p>{{commit.author}} ({{commit.author_email}})</p>\n        <p>{{commit.authored_datetime}}</p>\n        <p>{{commit.message}}</p>\n        <div class=\"card\" *ngFor=\"let file of commit.files\">\n            <div class=\"card-body\">\n                <p class=\"card-title\">{{file.filename}}</p>\n                <p class=\"card-text insertions\">Insertions: {{file.changes.insertions}}</p>\n                <p class=\"card-text deletions\">Deletions: {{file.changes.deletions}}</p>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { GitApiService } from '../services/git-api.service';\n\n@Component({\n  selector: 'app-commit',\n  templateUrl: './commit.component.html',\n  styleUrls: ['./commit.component.css']\n})\nexport class CommitComponent implements OnInit, OnDestroy {\n\n    commit_hexsha;\n    params_subscription;\n    commit;\n    loading = true;\n\n  constructor(private apiService: GitApiService, private route: ActivatedRoute,\n                private router: Router) { }\n\n  ngOnInit(): void {\n\n      this.params_subscription = this.route.params.subscribe((params) => {\n          this.commit_hexsha = this.route.snapshot.params['commit']\n\n          this.apiService.getCommit( this.commit_hexsha, (err, res) => {\n              if(err){\n                  console.log(err)\n              }\n              else{\n                  this.commit = res.commit;\n              }\n              this.loading = false;\n          })\n      });\n\n  }\n\n  ngOnDestroy(): void {\n      this.params_subscription.unsubscribe()\n  }\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { GitApiService } from '../services/git-api.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n\n    branches = []\n    selected_branch;\n    router_subscription;\n\n  constructor(private apiService: GitApiService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n\n      this.apiService.getBranches((err, res) => {\n          if(err){\n              console.log(err)\n          }\n          else{\n              this.branches = res.branches;\n              // console.log(this.branches)\n          }\n      })\n\n      if(this.route.snapshot.firstChild){\n          this.selected_branch = this.route.snapshot.firstChild.params['branch']\n      }\n\n      this.router_subscription = this.router.events.subscribe(event => {\n          if(event instanceof NavigationEnd) {\n              if(this.route.snapshot.firstChild){\n                  this.selected_branch = this.route.snapshot.firstChild.params['branch']\n              }\n              else{\n                  this.selected_branch = null\n              }\n          }\n      });\n  }\n\n  ngOnDestroy(){\n      this.router_subscription.unsubscribe();\n  }\n\n  onSelectBranch(branch){\n      this.selected_branch = branch;\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row p-3\">\n\n        <ul class=\"list-group col-sm-4\">\n            <li class=\"list-group-item\" *ngFor=\"let branch of branches\" [ngClass]=\"{active: branch == selected_branch}\">\n                <a href=\"#\" [routerLink]=\"['branch', branch]\" (click)=\"onSelectBranch(branch)\">\n                        {{branch}}\n                </a>\n            </li>\n        </ul>\n\n\n        <div class=\"col-sm-8\">\n            <router-outlet></router-outlet>\n        </div>\n\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'webapp';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { GitApiService } from './services/git-api.service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { BranchComponent } from './branch/branch.component';\nimport { CommitComponent } from './commit/commit.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BranchComponent,\n    CommitComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [\n      GitApiService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n// import { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  title = 'Git Webapp';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">{{title}}</a>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class GitApiService {\n\n    urlBasePath = 'http://127.0.0.1:8000/'\n\n    constructor(private http: HttpClient){}\n\n        getBranches(callback){\n            this.http.get(this.urlBasePath+'branches/')\n                .subscribe(\n                    res => {\n                        callback(null, res);\n                    },\n                    err => {\n                        callback('http error', null);\n                    }\n                )\n        }\n\n        getBranch(branch_name:string, callback){\n            this.http.get(this.urlBasePath+'branch/'+branch_name)\n                .subscribe(\n                    res => {\n                        callback(null, res);\n                    },\n                    err => {\n                        callback('http error', null);\n                    }\n                )\n        }\n\n        getCommit(commit_hexsha:string, callback){\n            this.http.get(this.urlBasePath+'commit/'+commit_hexsha)\n                .subscribe(\n                    res => {\n                        callback(null, res);\n                    },\n                    err => {\n                        callback('http error', null);\n                    }\n                )\n        }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { BranchComponent } from './branch/branch.component';\nimport { CommitComponent } from './commit/commit.component';\n\nconst publicRoutes: Routes = [\n    { path: '', children:[\n        { path: '', component: HomeComponent, children: [\n            { path: 'branch/:branch', component: BranchComponent }\n        ]},\n        { path: 'commit/:commit', component: CommitComponent },\n        // { path: 'pr', component: PRComponent }\n    ]}\n];\n\nconst routes: Routes = [\n    {\n        path: '',\n        children: [\n            ...publicRoutes,\n            {\n                path: '', component: HomeComponent, pathMatch: 'full'\n            }\n        ]\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}